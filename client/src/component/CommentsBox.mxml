<!--

/*
	 * Copyright (c) 2015, CEDEP France,
 	 * Authors: Albert A. Angehrn, Marco Luccini, Pradeep Kumar Mittal
         * All rights reserved.
	 * Redistribution and use in source and binary forms, with or without modification, 
	 * are permitted provided that the following conditions are met:
	 *
	 *  * Redistributions of source code must retain the above copyright notice, 
	 *    this list of conditions and the following disclaimer. 
	 *  * Redistributions in binary form must reproduce the above copyright notice, 
	 *    this list of conditions and the following disclaimer in the documentation
	 *    and/or other materials provided with the distribution. 
	 *  * Neither the name of the COLLAGE Group nor the names of its 
	 *    contributors may be used to endorse or promote products derived from this 
	 *    software without specific prior written permission. 
	 *
	 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY
	 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
	 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
	 * DISCLAIMED. IN NO EVENT SHALL CONSORTIUM BOARD COLLAGE Group BE LIABLE FOR ANY
	 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
	 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
	 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
	 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
	 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

-->


<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="100%" minHeight="50"  verticalScrollPolicy="auto" 
	 horizontalScrollPolicy="off"   xmlns:comp="component.*" height="100%">



<mx:HTTPService id="edit_comments" result="app.refreshcomments();//showCommentResponse();" fault="addCommentFault();" useProxy="false" method="POST"
          showBusyCursor="true" >
          </mx:HTTPService>




<!-- new state for update comments

-->



<mx:states>
<mx:State name="editcomment">
				<mx:RemoveChild target="{deleteicon}"/>
				<mx:RemoveChild target="{editbutton}"/>
				<mx:RemoveChild target="{comment_usrcomment}"/>
				<mx:AddChild position="lastChild">
					<mx:Button  label="{saveM}" width="90" fontWeight="bold" color="#B5DEAE" click="editcomment();" 
						x="83" y="120" tabEnabled="true" tabIndex="202"/>
				</mx:AddChild>
				<mx:AddChild position="lastChild">
						<mx:Text color="#000000" text="{commentM}" width="85" selectable="false"  x="81" y="36" fontWeight="bold"/>
				</mx:AddChild>
				<mx:AddChild position="lastChild">
						<mx:TextArea   text="{usrcomment}" left="81"  top="62" color="#000000" selectable="true" editable="true" id="txt_comm_userComment" width="311"    height="56" tabEnabled="true" tabIndex="201"/>
				</mx:AddChild>
				<mx:SetProperty  name="height" value="220"/>
				<mx:AddChild position="lastChild">
					<mx:Button label="{discardM}" width="90" fontWeight="bold" color="#F3B8B8" click="txt_comm_userComment.text='';currentState='';" 
						x="192" y="120" tabIndex="203" tabEnabled="true"/>
				</mx:AddChild>
				<mx:SetProperty  name="y" value="107"/>
			</mx:State>
		</mx:states>
<!--


-->

<mx:Script source=".././Asfiles/as_constants.as" />
<mx:Script source="../Asfiles/as_variables.as" />		
		<mx:Script>
			<![CDATA[
				import mx.core.Application;
				import mx.events.CloseEvent;
				import mx.controls.Alert;
				import mx.managers.CursorManager;
				import mx.rpc.events.ResultEvent;
				
				[Bindable] public var derivedHeight:uint;
				
				[Bindable] public var displayheader:String = new String();
				[Bindable] public var displayname:String = new String();				
				[Bindable] public var usrname:String = new String();
				[Bindable] public var usrcomment:String = new String();
				[Bindable] public var commentid:String = new String();
				[Bindable] public var datetime:String = new String();
				[Bindable] public var videoid:String = new String();
				[Bindable] public var time:String = new String();
				[Bindable] public var date:String = new String();
				[Bindable] public var imageURL:String = new String();
				[Bindable] public var BackgroundColor:uint ;
				public var waitingforupdate:Timer	=	new Timer(1000,0);
				[Bindable]  public var app:Tentube=Tentube(Application.application);
				  
 				[Bindable] public var submittedat:String=": ";
 				
 				private function deletecomment():void{
 					Alert.show(areYouRCM , alertM ,Alert.YES | Alert.NO, this,alertListener, null, Alert.YES);		
 				}
//added to include edit comments functionality		 		 		
		/* 		 private function updatecomment():void{
 					Alert.show("Are you sure you want to edit the comment ?", "Alert",Alert.YES | Alert.NO, this,editalertListener, null, Alert.YES);		
 				}		
		*/
		 		// albert.angehrn@insead.edu>says>marissa in afternoon>c>
		 		
		 		// we put the video id into lastupdated, so that after updating in the server 
		 		// and reloading the network, we can load the comments of this video
		 		// and show it to user the new set of comments !
		 		
			    private function alertListener(eventObj:CloseEvent):void {      
					if (eventObj.detail==Alert.YES) {
						var usr_com:String				=	usrname + '>says>' + usrcomment + '>c>';
						this.parentDocument.lastupdated =   app.Curr_Video.@id.toString();
						//app.deletecomment(usr_com,usrcomment );	
						app.deletecomment(commentid);
/*						var variables:URLVariables = new URLVariables();
			variables.action   			= 	"deletecomment";
			variables.videoid  			= 	app.Curr_Video.@id.toString();
			variables.comment  			= 	usr_com;
			variables.individualComment =   usrcomment;
			edit_comments.request 			= 	variables;		
			edit_comments.url				=	app.ServerPath + app.graphData + "change.php";
			app.comments_window.lastupdated	=	app.Curr_Video.@id.toString();
			//edit_comments.addEventListener(app.ResultEvent.RESULT,app.adminresponse_com);			
			edit_comments.send();	;			
						
						var curid:String	=	app.playingvideo.data.@id.toString();
						
					var variables:URLVariables  = 	new URLVariables();
					variables.videoId  			= 	curid;	
					
				//	app.form_videocomments.get_comments.url            = 	app.ServerPath + app.graphData + "getComments.php";	  
				//	get_comments.request 		= 	variables;
				//	get_comments.send();
*/					}		
					else if(eventObj.detail==Alert.NO) {
						// do nothing	
					}
		        }
////added to include edit comments functionality		        
		        private function updatecomment():void {      
					//if (eventObj.detail==Alert.YES) {
					//	var usr_com:String				=	usrname + '>says>' + usrcomment + '>c>';
					//	this.parentDocument.lastupdated =   app.Curr_Video.@id.toString();
						currentState= "editcomment";
					//	editcomment();	
						
									
		//			}		
		//			else if(eventObj.detail==Alert.NO) {
		//				// do nothing	
		//			}
		        }
	//added to include edit comments functionality	        
		        
		        private function editcomment():void {      
					//var usr_com:String				=	usrname + '>says>' + usrcomment + '>c>';
						this.parentDocument.lastupdated =   app.Curr_Video.@id.toString();
						
						var usrname:String = app.Univ_LoginItem.id ;
					usrcomment= txt_comm_userComment.text;
					
					if ( usrcomment=='' )
						return;
		/*			if ((usrcomment.indexOf("<")!=-1)||(usrcomment.indexOf(">")!=-1)||(usrcomment.indexOf("&")!=-1)||(usrcomment.indexOf("\"")!=-1)||(usrcomment.indexOf("\'")!=-1)){
						Alert.show(splChrM + " \" \' < > & " + notAllowM);
						//txt_comm_userComment.text = '';
						//newCommentSubmit();
						return; 
					}
					
		*/			
					//CursorManager.setBusyCursor();	
					var newcomment:String = new String();	
					newcomment = usrname + '>says>' + usrcomment +  '>c>';
					app.playingvideo.data.@comments = app.playingvideo.data.@comments + newcomment;
					var variables:URLVariables  = 	new URLVariables();
					variables.action  			= 	"editcomments";	
					variables.nodeid  			= 	app.playingvideo.data.@id.toString();
					variables.comments  		= 	newcomment;	
					variables.authorId          =   app.Univ_LoginId1;
					variables.individualComment =   usrcomment;
					variables.commentid			=	commentid;				
					edit_comments.url 			= 	app.ServerPath + app.graphData + "change.php";	  
					edit_comments.request 		= 	variables;
				//	lastupdated					=	app.playingvideo.data.@id.toString();	
					edit_comments.send();
				//log not updated because an antry already exists
				/*	var t_info:Object 	= new Object();
	      			t_info.action		= "updatelog";
	      			t_info.actiontype 	= 'Commented';
	      			t_info.takenby 		= app.Univ_LoginId1;
	      			t_info.takenon 		= app.Curr_Video.@id.toString();
	      			app.send_log_msg( t_info );
	      		*/	
		        
		        }
//added to include edit comments functionality		        
				private function isvisible():Boolean {      
					if(app.adminenter || app.Univ_LoginId1== usrname)
					return true;
					else return false;
		        }
	            
	            private function showCommentResponse(): void {
					try{
						var rspMessage:String;
			      		rspMessage = edit_comments.lastResult.rsp.message;
				 		if ( rspMessage == "Success" ) {
							txt_comm_userComment.text	= '';
							app.dataloaded				=	false;
							waitingforupdate.start();
							app.onAppCreationComplete();
						}
						else{
							Alert.show(comNotAddSM ,errM);
						}
					}
					catch(e:Error){
						Alert.show(comNotAddSM , errM);
						trace ( e.message );
						// take care
					}
					CursorManager.removeBusyCursor();	
				}
				
				private function addCommentFault():void{
					trace("addCommentFault()");					
				}
				
				
				private function resizeMe(field:TextArea) :void
				{
				var ta_height:uint = 25;
				field.validateNow();
					for(var i:int=0; i < field.mx_internal::getTextField().numLines; i++) {
							ta_height += field.mx_internal::getTextField().getLineMetrics(i).height;
						}
				field.mx_internal::getTextField().autoSize = TextFieldAutoSize.LEFT;
				field.height = ta_height + 10;
				}
				
				

				/*private function resizeMe(field:TextArea) :void
				{
			    	field.validateNow();
					field.mx_internal::getTextField().autoSize = TextFieldAutoSize.LEFT;
					field.height = field.mx_internal::getTextField().height + 1;
					
				}
*/
 		
		
			]]>

</mx:Script>

		<!-- the button is visible only in admin mode and to the logged in user if it is posted by him/her-->
		<!--<mx:Button id="editbutton" label="Edit" visible="{isvisible()}" click="updatecomment()" height="20"   right="110" top="2"/>-->

         <mx:Image id="editbutton" toolTip="{editComM}" visible="{isvisible()}" click="updatecomment()" height="20"   right="38" top="10" width="20" source="media/edit2.png" />
		
		<!-- the image is visible only in admin mode and to the logged in user if it is posted by him/her-->
		<mx:Image id="deleteicon" toolTip="{Application.application.toolTip_deleteComment}" visible="{isvisible()}" click="deletecomment()" height="20" width="20" source="media/delete.png" right="10" top="10"/>
		
		<mx:TextArea text="{displayname+submittedat+datetime}" id="comment_usrid" 
			color="#1D3ECD" fontSize="9" textAlign="left" selectable="false" 
			editable="false" cornerRadius="0" backgroundColor="#F5EDED"  borderThickness="0" borderStyle="none" right="95" top="8" left="81" height="20"/>
			
				
		
		
<!--		<mx:TextArea  editable="false" selectable="false" text="{usrcomment}" 
			id="comment_usrcomment"  cornerRadius="0" alpha="1.0" backgroundAlpha="1.0" fontSize="13" 
			color="#8C66C6" backgroundColor="#FFFFFF" borderStyle="none" right="38" left="81" bottom="6" top="30" creationComplete="resizeMe(this.comment_usrcomment)" />
-->
			<mx:TextArea  editable="false" selectable="false" text="{usrcomment}" 
			id="comment_usrcomment"  cornerRadius="0" alpha="1.0" backgroundAlpha="1.0" fontSize="13" 
			color="#8C66C6" backgroundColor="#FFFFFF" borderStyle="none" right="38" left="81" bottom="6" top="30"  />


		
	
		<mx:Image source="{imageURL}" bottom="45" top="10" left="10" width="63"/>
		
</mx:Canvas>
