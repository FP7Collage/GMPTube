<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml"  creationPolicy="all" layout="vertical" creationComplete="creationCompleteHandler()" showCloseButton="true" mouseDown="this.startDrag();" mouseUp="this.stopDrag();" width="350" >
	
			      	
	<mx:Script>
		<![CDATA[
			import mx.collections.ListCollectionView;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.managers.PopUpManager;
			
			[Bindable] public var dataProvider:ListCollectionView = new XMLListCollection(new XMLList("<node state='unchecked' label='Empty' value='0'/>"));
			[Bindable] public var labelField:String = "@label";
			[Bindable] public var stateField:String = "@state";
			[Bindable] public var controlBarHorizontalAlign:String = "center";
			[Bindable] public var selectAllButtonLabel:String = "Select all";
			[Bindable] public var clearAllButtonLabel:String = "Clear all";
			
			private function creationCompleteHandler():void {
				dataProvider.filterFunction = dataProviderFilterFuntion;
				dataProvider.refresh();
			}
			
			private function dataProviderFilterFuntion(item:Object):Boolean {
				var result:Boolean = false;
				
				if( String(item[labelField]).toLowerCase().search(filterInput.text.toLowerCase()) != -1 ) {
					result = true;
					
				}
				else {
					result = false;
				}
				if(result == false)
				{
				for each( var itemchild:Object in item.Node)
				{
					if( String(itemchild[labelField]).toLowerCase().search(filterInput.text.toLowerCase()) != -1 ) {
					result = true;
				//dataProviderFilterFuntion(itemchild);
				
				}
				}
				}
				return result;
			}
			
			private function filterInputChangeHandler():void {
				dataProvider.filterFunction = dataProviderFilterFuntion;
				dataProvider.refresh();
				
				if( dataProvider.length == 0 ) {
					tree.dataProvider = new XMLListCollection(new XMLList("<node state='unchecked' label='No results found' value='0'/>"));
				}
				else {
					tree.dataProvider = dataProvider;
				}
			}
			public function Closethispop2(evt:MouseEvent):void{  
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	<mx:HBox width="100%" horizontalGap="0">
		<mx:TextInput id="filterInput" width="100%" change="{filterInputChangeHandler()}"/>
		<mx:LinkButton icon="@Embed(source='images/cancel.png')" click="{filterInput.text = ''; filterInputChangeHandler()}"/>
	</mx:HBox>
	<mx:Tree id="tree" itemRenderer="net.srirangan.inputs.CheckTreeRenderer" dataProvider="{dataProvider}" 
		width="100%" height="100%" labelField="{labelField}" defaultLeafIcon="{null}" folderClosedIcon="{null}" folderOpenIcon="{null}">
		
	</mx:Tree>	
</mx:TitleWindow>